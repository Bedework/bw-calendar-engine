/* ********************************************************************
    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.
*/
package org.bedework.dumprestore.restore.rules;

import org.bedework.calfacade.BwAlarm;
import org.bedework.calfacade.BwAttachment;
import org.bedework.calfacade.BwAttendee;
import org.bedework.calfacade.BwAuthUser;
import org.bedework.calfacade.BwCalendar;
import org.bedework.calfacade.BwCategory;
import org.bedework.calfacade.BwCollectionLastmod;
import org.bedework.calfacade.BwContact;
import org.bedework.calfacade.BwEventAnnotation;
import org.bedework.calfacade.BwEventObj;
import org.bedework.calfacade.BwFilterDef;
import org.bedework.calfacade.BwGeo;
import org.bedework.calfacade.BwLocation;
import org.bedework.calfacade.BwOrganizer;
import org.bedework.calfacade.BwPreferences;
import org.bedework.calfacade.BwRelatedTo;
import org.bedework.calfacade.BwRequestStatus;
import org.bedework.calfacade.BwResource;
import org.bedework.calfacade.BwResourceContent;
import org.bedework.calfacade.BwSystem;
import org.bedework.calfacade.BwUser;
import org.bedework.calfacade.base.BwShareableDbentity;
import org.bedework.calfacade.svc.BwAdminGroup;
import org.bedework.calfacade.svc.BwCalSuite;
import org.bedework.dumprestore.Defs;
import org.bedework.dumprestore.restore.RestoreGlobals;

import org.xml.sax.Attributes;

import java.util.HashMap;

/**
 * @author Mike Douglass   douglm @ bedework.edu
 * @version 1.0
 */
public class EntityRule extends RestoreRule implements Defs {

  /** Link tag-name to calendar class. For every entity tag generated by the dump
   * there should be an entry in this table.
   */
  public static final HashMap<String, String> classes = new HashMap<String, String>();

  static {
    classes.put(objectFilter, BwFilterDef.class.getName());
    classes.put(objectSystem, BwSystem.class.getName());
    classes.put(objectUser, BwUser.class.getName());
    classes.put(objectCalendar, BwCalendar.class.getName());
    classes.put(objectCollection, BwCalendar.class.getName());
    classes.put(objectCalSuite, BwCalSuite.class.getName());
    classes.put(objectLocation, BwLocation.class.getName());
    classes.put(objectContact, BwContact.class.getName());
    classes.put(objectOrganizer, BwOrganizer.class.getName());
    classes.put(objectAttachment, BwAttachment.class.getName());
    classes.put(objectAttendee, BwAttendee.class.getName());
    classes.put(objectAlarm, BwAlarm.class.getName());
    classes.put(objectCategory, BwCategory.class.getName());
    classes.put(objectAuthUser, BwAuthUser.class.getName());
    classes.put(objectAdminGroup, BwAdminGroup.class.getName());
    classes.put(objectPreferences, BwPreferences.class.getName());
    classes.put("request-status", BwRequestStatus.class.getName());
    classes.put(objectGeo, BwGeo.class.getName());
    classes.put(objectRelatedTo, BwRelatedTo.class.getName());
    classes.put(objectResource, BwResource.class.getName());
    classes.put(objectContent, BwResourceContent.class.getName());

    /* The name is the kind key for EventRule. */
    classes.put(objectEvent, BwEventObj.class.getName());
    classes.put(objectOverride, BwEventAnnotation.class.getName());
    classes.put(objectEventAnnotation, BwEventAnnotation.class.getName());

    classes.put(objectDateTime, DateTimeValues.class.getName());
    classes.put(objectColLastmod, BwCollectionLastmod.class.getName());
  }

  EntityRule(final RestoreGlobals globals) {
    super(globals);
  }

  /* (non-Javadoc)
   * @see org.apache.commons.digester.Rule#begin(java.lang.String, java.lang.String, org.xml.sax.Attributes)
   */
  @Override
  public void begin(final String ns, final String name, final Attributes att) throws Exception {
    globals.entityError = false;

    if (debug) {
      trace("About to push entity for " + name);
    }

    String className = classes.get(name);

    if (className == null) {
      throw new RuntimeException("Unable to get class name for " + name);
    }

    Object o = null;

    try {
      Class c = Class.forName(className);

      if (c == null) {
        throw new RuntimeException("Unable to get class for " + name +
                                   " and class " + className);
      }

      o = c.newInstance();

      push(o);
    } catch (ClassNotFoundException e) {
      throw new RuntimeException("Class " + className + " not found");
    } catch (Throwable t) {
      throw new RuntimeException(t);
    }
  }

  /** Set the owner and creator on a shareable entity.
   *
   * @param entity
   * @param name
   * @throws Exception
   */
  public void fixSharableEntity(final BwShareableDbentity entity,
                                final String name) throws Exception {
    try {
      if (entity.getCreatorHref() == null) {
        warn(name + " " + entity.getId() + " has no creator, set to " +
            globals.getPublicUser().getAccount());

        entity.setCreatorHref(globals.getPublicUser().getPrincipalRef());
      }

      if (entity.getOwnerHref() == null) {
        warn(name + " " + entity.getId() + " has no owner, set to " +
            globals.getPublicUser().getAccount());

        entity.setOwnerHref(globals.getPublicUser().getPrincipalRef());

        if (!entity.getPublick()) {
          warn(name + " " + entity.getId() + " is NOT public");
        }
      }
    } catch (Throwable t) {
      throw new Exception(t);
    }
  }
}

